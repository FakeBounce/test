// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing SearchBar component renders as expected with params 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBar
    history={
        Array [
            "/home",
          ]
    }
    isOpen={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Collapse
        appear={false}
        enter={true}
        exit={true}
        in={false}
        isOpen={true}
        mountOnEnter={false}
        onEnter={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExit={[Function]}
        onExited={[Function]}
        onExiting={[Function]}
        tag="div"
        timeout={350}
        unmountOnExit={false}
>
        <Input
                onChange={[Function]}
                onKeyPress={[Function]}
                placeholder="Rechercher"
                type="text"
                value=""
        />
</Collapse>,
      "className": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "appear": false,
        "children": <Input
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="Rechercher"
          type="text"
          value=""
/>,
        "enter": true,
        "exit": true,
        "in": false,
        "isOpen": true,
        "mountOnEnter": false,
        "onEnter": [Function],
        "onEntered": [Function],
        "onEntering": [Function],
        "onExit": [Function],
        "onExited": [Function],
        "onExiting": [Function],
        "tag": "div",
        "timeout": 350,
        "unmountOnExit": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onChange": [Function],
          "onKeyPress": [Function],
          "placeholder": "Rechercher",
          "type": "text",
          "value": "",
        },
        "ref": [Function],
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Collapse
          appear={false}
          enter={true}
          exit={true}
          in={false}
          isOpen={true}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          tag="div"
          timeout={350}
          unmountOnExit={false}
>
          <Input
                    onChange={[Function]}
                    onKeyPress={[Function]}
                    placeholder="Rechercher"
                    type="text"
                    value=""
          />
</Collapse>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "appear": false,
          "children": <Input
            onChange={[Function]}
            onKeyPress={[Function]}
            placeholder="Rechercher"
            type="text"
            value=""
/>,
          "enter": true,
          "exit": true,
          "in": false,
          "isOpen": true,
          "mountOnEnter": false,
          "onEnter": [Function],
          "onEntered": [Function],
          "onEntering": [Function],
          "onExit": [Function],
          "onExited": [Function],
          "onExiting": [Function],
          "tag": "div",
          "timeout": 350,
          "unmountOnExit": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onChange": [Function],
            "onKeyPress": [Function],
            "placeholder": "Rechercher",
            "type": "text",
            "value": "",
          },
          "ref": [Function],
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing SearchBar component renders as expected without params 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Collapse
        appear={false}
        enter={true}
        exit={true}
        in={false}
        isOpen={false}
        mountOnEnter={false}
        onEnter={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExit={[Function]}
        onExited={[Function]}
        onExiting={[Function]}
        tag="div"
        timeout={350}
        unmountOnExit={false}
>
        <Input
                onChange={[Function]}
                onKeyPress={[Function]}
                placeholder="Rechercher"
                type="text"
                value=""
        />
</Collapse>,
      "className": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "appear": false,
        "children": <Input
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="Rechercher"
          type="text"
          value=""
/>,
        "enter": true,
        "exit": true,
        "in": false,
        "isOpen": false,
        "mountOnEnter": false,
        "onEnter": [Function],
        "onEntered": [Function],
        "onEntering": [Function],
        "onExit": [Function],
        "onExited": [Function],
        "onExiting": [Function],
        "tag": "div",
        "timeout": 350,
        "unmountOnExit": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onChange": [Function],
          "onKeyPress": [Function],
          "placeholder": "Rechercher",
          "type": "text",
          "value": "",
        },
        "ref": [Function],
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Collapse
          appear={false}
          enter={true}
          exit={true}
          in={false}
          isOpen={false}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          tag="div"
          timeout={350}
          unmountOnExit={false}
>
          <Input
                    onChange={[Function]}
                    onKeyPress={[Function]}
                    placeholder="Rechercher"
                    type="text"
                    value=""
          />
</Collapse>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "appear": false,
          "children": <Input
            onChange={[Function]}
            onKeyPress={[Function]}
            placeholder="Rechercher"
            type="text"
            value=""
/>,
          "enter": true,
          "exit": true,
          "in": false,
          "isOpen": false,
          "mountOnEnter": false,
          "onEnter": [Function],
          "onEntered": [Function],
          "onEntering": [Function],
          "onExit": [Function],
          "onExited": [Function],
          "onExiting": [Function],
          "tag": "div",
          "timeout": 350,
          "unmountOnExit": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onChange": [Function],
            "onKeyPress": [Function],
            "placeholder": "Rechercher",
            "type": "text",
            "value": "",
          },
          "ref": [Function],
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;
