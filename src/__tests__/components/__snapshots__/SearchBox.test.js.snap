// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing SearchBox component renders as expected with parameters 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    placeholder="placeholder"
    requestSearch={[Function]}
    searchedValue={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <InputGroup
        className={undefined}
        tag="div"
>
        <Input
                className={undefined}
                onChange={[Function]}
                onKeyPress={[Function]}
                placeholder="placeholder"
                type="text"
                value=""
        />
        <InputGroupAddon
                addonType="append"
                tag="div"
        >
                <Button
                        color="secondary"
                        disabled={false}
                        onClick={[Function]}
                        tag="button"
                />
        </InputGroupAddon>
</InputGroup>,
      "className": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Input
            className={undefined}
            onChange={[Function]}
            onKeyPress={[Function]}
            placeholder="placeholder"
            type="text"
            value=""
/>,
          <InputGroupAddon
            addonType="append"
            tag="div"
>
            <Button
                        color="secondary"
                        disabled={false}
                        onClick={[Function]}
                        tag="button"
            />
</InputGroupAddon>,
        ],
        "className": undefined,
        "tag": "div",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": undefined,
            "onChange": [Function],
            "onKeyPress": [Function],
            "placeholder": "placeholder",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "addonType": "append",
            "children": <Button
              color="secondary"
              disabled={false}
              onClick={[Function]}
              tag="button"
/>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "color": "secondary",
              "disabled": false,
              "onClick": [Function],
              "tag": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <InputGroup
          className={undefined}
          tag="div"
>
          <Input
                    className={undefined}
                    onChange={[Function]}
                    onKeyPress={[Function]}
                    placeholder="placeholder"
                    type="text"
                    value=""
          />
          <InputGroupAddon
                    addonType="append"
                    tag="div"
          >
                    <Button
                              color="secondary"
                              disabled={false}
                              onClick={[Function]}
                              tag="button"
                    />
          </InputGroupAddon>
</InputGroup>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Input
              className={undefined}
              onChange={[Function]}
              onKeyPress={[Function]}
              placeholder="placeholder"
              type="text"
              value=""
/>,
            <InputGroupAddon
              addonType="append"
              tag="div"
>
              <Button
                            color="secondary"
                            disabled={false}
                            onClick={[Function]}
                            tag="button"
              />
</InputGroupAddon>,
          ],
          "className": undefined,
          "tag": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": undefined,
              "onChange": [Function],
              "onKeyPress": [Function],
              "placeholder": "placeholder",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "addonType": "append",
              "children": <Button
                color="secondary"
                disabled={false}
                onClick={[Function]}
                tag="button"
/>,
              "tag": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "color": "secondary",
                "disabled": false,
                "onClick": [Function],
                "tag": "button",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing SearchBox component renders as expected without parameters 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <InputGroup
        className={undefined}
        tag="div"
>
        <Input
                className={undefined}
                onChange={[Function]}
                onKeyPress={[Function]}
                placeholder="Rechercher"
                type="text"
                value=""
        />
        <InputGroupAddon
                addonType="append"
                tag="div"
        >
                <Button
                        color="secondary"
                        disabled={false}
                        onClick={[Function]}
                        tag="button"
                />
        </InputGroupAddon>
</InputGroup>,
      "className": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Input
            className={undefined}
            onChange={[Function]}
            onKeyPress={[Function]}
            placeholder="Rechercher"
            type="text"
            value=""
/>,
          <InputGroupAddon
            addonType="append"
            tag="div"
>
            <Button
                        color="secondary"
                        disabled={false}
                        onClick={[Function]}
                        tag="button"
            />
</InputGroupAddon>,
        ],
        "className": undefined,
        "tag": "div",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": undefined,
            "onChange": [Function],
            "onKeyPress": [Function],
            "placeholder": "Rechercher",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "addonType": "append",
            "children": <Button
              color="secondary"
              disabled={false}
              onClick={[Function]}
              tag="button"
/>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "color": "secondary",
              "disabled": false,
              "onClick": [Function],
              "tag": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <InputGroup
          className={undefined}
          tag="div"
>
          <Input
                    className={undefined}
                    onChange={[Function]}
                    onKeyPress={[Function]}
                    placeholder="Rechercher"
                    type="text"
                    value=""
          />
          <InputGroupAddon
                    addonType="append"
                    tag="div"
          >
                    <Button
                              color="secondary"
                              disabled={false}
                              onClick={[Function]}
                              tag="button"
                    />
          </InputGroupAddon>
</InputGroup>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Input
              className={undefined}
              onChange={[Function]}
              onKeyPress={[Function]}
              placeholder="Rechercher"
              type="text"
              value=""
/>,
            <InputGroupAddon
              addonType="append"
              tag="div"
>
              <Button
                            color="secondary"
                            disabled={false}
                            onClick={[Function]}
                            tag="button"
              />
</InputGroupAddon>,
          ],
          "className": undefined,
          "tag": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": undefined,
              "onChange": [Function],
              "onKeyPress": [Function],
              "placeholder": "Rechercher",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "addonType": "append",
              "children": <Button
                color="secondary"
                disabled={false}
                onClick={[Function]}
                tag="button"
/>,
              "tag": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "color": "secondary",
                "disabled": false,
                "onClick": [Function],
                "tag": "button",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;
