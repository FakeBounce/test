// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing PermissionsModal component renders as expected with parameters (as closed) 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PermissionsModal
    file={null}
    isOpen={false}
    title="Title"
    toggle={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "ModalFooterContent": [Function],
      "children": Array [
        <p
          className={undefined}
>
          Permissions
</p>,
        <div
          className={undefined}
>
          <div
                    className={undefined}
                    onClick={[Function]}
          >
                    <span>
                               
                              +
                    </span>
          </div>
</div>,
        Array [],
        false,
      ],
      "className": "NewFileModal",
      "file": null,
      "isOpen": false,
      "title": "Title",
      "toggle": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Permissions",
          "className": undefined,
        },
        "ref": null,
        "rendered": "Permissions",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className={undefined}
              onClick={[Function]}
>
              <span>
                             
                            +
              </span>
</div>,
            false,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span>
                 
                +
</span>,
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  " ",
                  "+",
                ],
              },
              "ref": null,
              "rendered": Array [
                " ",
                "+",
              ],
              "type": "span",
            },
            "type": "div",
          },
          false,
        ],
        "type": "div",
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ModalFooterContent": [Function],
        "children": Array [
          <p
            className={undefined}
>
            Permissions
</p>,
          <div
            className={undefined}
>
            <div
                        className={undefined}
                        onClick={[Function]}
            >
                        <span>
                                     
                                    +
                        </span>
            </div>
</div>,
          Array [],
          false,
        ],
        "className": "NewFileModal",
        "file": null,
        "isOpen": false,
        "title": "Title",
        "toggle": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Permissions",
            "className": undefined,
          },
          "ref": null,
          "rendered": "Permissions",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className={undefined}
                onClick={[Function]}
>
                <span>
                                 
                                +
                </span>
</div>,
              false,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span>
                   
                  +
</span>,
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    " ",
                    "+",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  " ",
                  "+",
                ],
                "type": "span",
              },
              "type": "div",
            },
            false,
          ],
          "type": "div",
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing PermissionsModal component renders as expected with parameters (as open) 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PermissionsModal
    file={null}
    isOpen={true}
    title="Title"
    toggle={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "ModalFooterContent": [Function],
      "children": Array [
        <p
          className={undefined}
>
          Permissions
</p>,
        <div
          className={undefined}
>
          <div
                    className={undefined}
                    onClick={[Function]}
          >
                    <span>
                               
                              +
                    </span>
          </div>
</div>,
        Array [],
        false,
      ],
      "className": "NewFileModal",
      "file": null,
      "isOpen": true,
      "title": "Title",
      "toggle": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Permissions",
          "className": undefined,
        },
        "ref": null,
        "rendered": "Permissions",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className={undefined}
              onClick={[Function]}
>
              <span>
                             
                            +
              </span>
</div>,
            false,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span>
                 
                +
</span>,
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  " ",
                  "+",
                ],
              },
              "ref": null,
              "rendered": Array [
                " ",
                "+",
              ],
              "type": "span",
            },
            "type": "div",
          },
          false,
        ],
        "type": "div",
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ModalFooterContent": [Function],
        "children": Array [
          <p
            className={undefined}
>
            Permissions
</p>,
          <div
            className={undefined}
>
            <div
                        className={undefined}
                        onClick={[Function]}
            >
                        <span>
                                     
                                    +
                        </span>
            </div>
</div>,
          Array [],
          false,
        ],
        "className": "NewFileModal",
        "file": null,
        "isOpen": true,
        "title": "Title",
        "toggle": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Permissions",
            "className": undefined,
          },
          "ref": null,
          "rendered": "Permissions",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className={undefined}
                onClick={[Function]}
>
                <span>
                                 
                                +
                </span>
</div>,
              false,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span>
                   
                  +
</span>,
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    " ",
                    "+",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  " ",
                  "+",
                ],
                "type": "span",
              },
              "type": "div",
            },
            false,
          ],
          "type": "div",
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing PermissionsModal component renders as expected without parameters 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PermissionsModal />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "ModalFooterContent": [Function],
      "children": Array [
        <p
          className={undefined}
>
          Permissions
</p>,
        <div
          className={undefined}
>
          <div
                    className={undefined}
                    onClick={[Function]}
          >
                    <span>
                               
                              +
                    </span>
          </div>
</div>,
        Array [],
        false,
      ],
      "className": "NewFileModal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Permissions",
          "className": undefined,
        },
        "ref": null,
        "rendered": "Permissions",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className={undefined}
              onClick={[Function]}
>
              <span>
                             
                            +
              </span>
</div>,
            false,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span>
                 
                +
</span>,
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  " ",
                  "+",
                ],
              },
              "ref": null,
              "rendered": Array [
                " ",
                "+",
              ],
              "type": "span",
            },
            "type": "div",
          },
          false,
        ],
        "type": "div",
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ModalFooterContent": [Function],
        "children": Array [
          <p
            className={undefined}
>
            Permissions
</p>,
          <div
            className={undefined}
>
            <div
                        className={undefined}
                        onClick={[Function]}
            >
                        <span>
                                     
                                    +
                        </span>
            </div>
</div>,
          Array [],
          false,
        ],
        "className": "NewFileModal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Permissions",
            "className": undefined,
          },
          "ref": null,
          "rendered": "Permissions",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className={undefined}
                onClick={[Function]}
>
                <span>
                                 
                                +
                </span>
</div>,
              false,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span>
                   
                  +
</span>,
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    " ",
                    "+",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  " ",
                  "+",
                ],
                "type": "span",
              },
              "type": "div",
            },
            false,
          ],
          "type": "div",
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;
