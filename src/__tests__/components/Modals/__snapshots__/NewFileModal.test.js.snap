// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing NewFileModal component behave correctly when updating state 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewFileModal
    handleNoButtonClick={[Function]}
    handleYesButtonClick={[Function]}
    isOpen={false}
    title="Title"
    toggle={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "ModalFooterContent": [Function],
      "children": <n
        className="dropzone"
        disableClick={false}
        disablePreview={false}
        disabled={false}
        getDataTransferItems={[Function]}
        inputProps={Object {}}
        maxSize={Infinity}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
>
        <div>
                <Media
                        src="test.png"
                />
                <p>
                        Media
                </p>
        </div>
</n>,
      "className": "NewFileModal",
      "handleNoButtonClick": [Function],
      "handleYesButtonClick": [Function],
      "isOpen": false,
      "title": "Title",
      "toggle": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div>
            <Media
                        src="test.png"
            />
            <p>
                        Media
            </p>
</div>,
        ],
        "className": "dropzone",
        "disableClick": false,
        "disablePreview": false,
        "disabled": false,
        "getDataTransferItems": [Function],
        "inputProps": Object {},
        "maxSize": Infinity,
        "minSize": 0,
        "multiple": true,
        "onDrop": [Function],
        "preventDropOnDocument": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Media
                src="test.png"
/>,
              <p>
                Media
</p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "src": "test.png",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Media",
              },
              "ref": null,
              "rendered": "Media",
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ModalFooterContent": [Function],
        "children": <n
          className="dropzone"
          disableClick={false}
          disablePreview={false}
          disabled={false}
          getDataTransferItems={[Function]}
          inputProps={Object {}}
          maxSize={Infinity}
          minSize={0}
          multiple={true}
          onDrop={[Function]}
          preventDropOnDocument={true}
>
          <div>
                    <Media
                              src="test.png"
                    />
                    <p>
                              Media
                    </p>
          </div>
</n>,
        "className": "NewFileModal",
        "handleNoButtonClick": [Function],
        "handleYesButtonClick": [Function],
        "isOpen": false,
        "title": "Title",
        "toggle": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div>
              <Media
                            src="test.png"
              />
              <p>
                            Media
              </p>
</div>,
          ],
          "className": "dropzone",
          "disableClick": false,
          "disablePreview": false,
          "disabled": false,
          "getDataTransferItems": [Function],
          "inputProps": Object {},
          "maxSize": Infinity,
          "minSize": 0,
          "multiple": true,
          "onDrop": [Function],
          "preventDropOnDocument": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Media
                  src="test.png"
/>,
                <p>
                  Media
</p>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "src": "test.png",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Media",
                },
                "ref": null,
                "rendered": "Media",
                "type": "p",
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing NewFileModal component behave correctly when updating state with wrong params 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewFileModal
    handleNoButtonClick={[Function]}
    handleYesButtonClick={[Function]}
    isOpen={false}
    title="Title"
    toggle={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "ModalFooterContent": [Function],
      "children": <n
        className="dropzone"
        disableClick={false}
        disablePreview={false}
        disabled={false}
        getDataTransferItems={[Function]}
        inputProps={Object {}}
        maxSize={Infinity}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
>
        
</n>,
      "className": "NewFileModal",
      "handleNoButtonClick": [Function],
      "handleYesButtonClick": [Function],
      "isOpen": false,
      "title": "Title",
      "toggle": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          null,
        ],
        "className": "dropzone",
        "disableClick": false,
        "disablePreview": false,
        "disabled": false,
        "getDataTransferItems": [Function],
        "inputProps": Object {},
        "maxSize": Infinity,
        "minSize": 0,
        "multiple": true,
        "onDrop": [Function],
        "preventDropOnDocument": true,
      },
      "ref": null,
      "rendered": Array [
        null,
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ModalFooterContent": [Function],
        "children": <n
          className="dropzone"
          disableClick={false}
          disablePreview={false}
          disabled={false}
          getDataTransferItems={[Function]}
          inputProps={Object {}}
          maxSize={Infinity}
          minSize={0}
          multiple={true}
          onDrop={[Function]}
          preventDropOnDocument={true}
>
          
</n>,
        "className": "NewFileModal",
        "handleNoButtonClick": [Function],
        "handleYesButtonClick": [Function],
        "isOpen": false,
        "title": "Title",
        "toggle": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            null,
          ],
          "className": "dropzone",
          "disableClick": false,
          "disablePreview": false,
          "disabled": false,
          "getDataTransferItems": [Function],
          "inputProps": Object {},
          "maxSize": Infinity,
          "minSize": 0,
          "multiple": true,
          "onDrop": [Function],
          "preventDropOnDocument": true,
        },
        "ref": null,
        "rendered": Array [
          null,
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing NewFileModal component behave correctly when updating state with wrong params 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewFileModal
    handleNoButtonClick={[Function]}
    handleYesButtonClick={[Function]}
    isOpen={false}
    title="Title"
    toggle={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "ModalFooterContent": [Function],
      "children": <n
        className="dropzone"
        disableClick={false}
        disablePreview={false}
        disabled={false}
        getDataTransferItems={[Function]}
        inputProps={Object {}}
        maxSize={Infinity}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
>
        
</n>,
      "className": "NewFileModal",
      "handleNoButtonClick": [Function],
      "handleYesButtonClick": [Function],
      "isOpen": false,
      "title": "Title",
      "toggle": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          null,
        ],
        "className": "dropzone",
        "disableClick": false,
        "disablePreview": false,
        "disabled": false,
        "getDataTransferItems": [Function],
        "inputProps": Object {},
        "maxSize": Infinity,
        "minSize": 0,
        "multiple": true,
        "onDrop": [Function],
        "preventDropOnDocument": true,
      },
      "ref": null,
      "rendered": Array [
        null,
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ModalFooterContent": [Function],
        "children": <n
          className="dropzone"
          disableClick={false}
          disablePreview={false}
          disabled={false}
          getDataTransferItems={[Function]}
          inputProps={Object {}}
          maxSize={Infinity}
          minSize={0}
          multiple={true}
          onDrop={[Function]}
          preventDropOnDocument={true}
>
          
</n>,
        "className": "NewFileModal",
        "handleNoButtonClick": [Function],
        "handleYesButtonClick": [Function],
        "isOpen": false,
        "title": "Title",
        "toggle": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            null,
          ],
          "className": "dropzone",
          "disableClick": false,
          "disablePreview": false,
          "disabled": false,
          "getDataTransferItems": [Function],
          "inputProps": Object {},
          "maxSize": Infinity,
          "minSize": 0,
          "multiple": true,
          "onDrop": [Function],
          "preventDropOnDocument": true,
        },
        "ref": null,
        "rendered": Array [
          null,
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing NewFileModal component behave correctly when updating state with wrong params 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewFileModal
    handleNoButtonClick={[Function]}
    handleYesButtonClick={[Function]}
    isOpen={false}
    title="Title"
    toggle={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "ModalFooterContent": [Function],
      "children": <n
        className="dropzone"
        disableClick={false}
        disablePreview={false}
        disabled={false}
        getDataTransferItems={[Function]}
        inputProps={Object {}}
        maxSize={Infinity}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
>
        <p>
                Déposez vos fichiers
                .
                 
                Ajoutez vos fichiers en les glissant dans cette fenêtre
        </p>
</n>,
      "className": "NewFileModal",
      "handleNoButtonClick": [Function],
      "handleYesButtonClick": [Function],
      "isOpen": false,
      "title": "Title",
      "toggle": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <p>
          Déposez vos fichiers
          .
           
          Ajoutez vos fichiers en les glissant dans cette fenêtre
</p>,
        "className": "dropzone",
        "disableClick": false,
        "disablePreview": false,
        "disabled": false,
        "getDataTransferItems": [Function],
        "inputProps": Object {},
        "maxSize": Infinity,
        "minSize": 0,
        "multiple": true,
        "onDrop": [Function],
        "preventDropOnDocument": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Déposez vos fichiers",
            ".",
            " ",
            "Ajoutez vos fichiers en les glissant dans cette fenêtre",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Déposez vos fichiers",
          ".",
          " ",
          "Ajoutez vos fichiers en les glissant dans cette fenêtre",
        ],
        "type": "p",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ModalFooterContent": [Function],
        "children": <n
          className="dropzone"
          disableClick={false}
          disablePreview={false}
          disabled={false}
          getDataTransferItems={[Function]}
          inputProps={Object {}}
          maxSize={Infinity}
          minSize={0}
          multiple={true}
          onDrop={[Function]}
          preventDropOnDocument={true}
>
          <p>
                    Déposez vos fichiers
                    .
                     
                    Ajoutez vos fichiers en les glissant dans cette fenêtre
          </p>
</n>,
        "className": "NewFileModal",
        "handleNoButtonClick": [Function],
        "handleYesButtonClick": [Function],
        "isOpen": false,
        "title": "Title",
        "toggle": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <p>
            Déposez vos fichiers
            .
             
            Ajoutez vos fichiers en les glissant dans cette fenêtre
</p>,
          "className": "dropzone",
          "disableClick": false,
          "disablePreview": false,
          "disabled": false,
          "getDataTransferItems": [Function],
          "inputProps": Object {},
          "maxSize": Infinity,
          "minSize": 0,
          "multiple": true,
          "onDrop": [Function],
          "preventDropOnDocument": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Déposez vos fichiers",
              ".",
              " ",
              "Ajoutez vos fichiers en les glissant dans cette fenêtre",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Déposez vos fichiers",
            ".",
            " ",
            "Ajoutez vos fichiers en les glissant dans cette fenêtre",
          ],
          "type": "p",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing NewFileModal component renders as expected with parameters (as closed) 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewFileModal
    handleNoButtonClick={[Function]}
    handleYesButtonClick={[Function]}
    isOpen={false}
    title="Title"
    toggle={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "ModalFooterContent": [Function],
      "children": <n
        className="dropzone"
        disableClick={false}
        disablePreview={false}
        disabled={false}
        getDataTransferItems={[Function]}
        inputProps={Object {}}
        maxSize={Infinity}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
>
        <p>
                Déposez vos fichiers
                .
                 
                Ajoutez vos fichiers en les glissant dans cette fenêtre
        </p>
</n>,
      "className": "NewFileModal",
      "handleNoButtonClick": [Function],
      "handleYesButtonClick": [Function],
      "isOpen": false,
      "title": "Title",
      "toggle": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <p>
          Déposez vos fichiers
          .
           
          Ajoutez vos fichiers en les glissant dans cette fenêtre
</p>,
        "className": "dropzone",
        "disableClick": false,
        "disablePreview": false,
        "disabled": false,
        "getDataTransferItems": [Function],
        "inputProps": Object {},
        "maxSize": Infinity,
        "minSize": 0,
        "multiple": true,
        "onDrop": [Function],
        "preventDropOnDocument": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Déposez vos fichiers",
            ".",
            " ",
            "Ajoutez vos fichiers en les glissant dans cette fenêtre",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Déposez vos fichiers",
          ".",
          " ",
          "Ajoutez vos fichiers en les glissant dans cette fenêtre",
        ],
        "type": "p",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ModalFooterContent": [Function],
        "children": <n
          className="dropzone"
          disableClick={false}
          disablePreview={false}
          disabled={false}
          getDataTransferItems={[Function]}
          inputProps={Object {}}
          maxSize={Infinity}
          minSize={0}
          multiple={true}
          onDrop={[Function]}
          preventDropOnDocument={true}
>
          <p>
                    Déposez vos fichiers
                    .
                     
                    Ajoutez vos fichiers en les glissant dans cette fenêtre
          </p>
</n>,
        "className": "NewFileModal",
        "handleNoButtonClick": [Function],
        "handleYesButtonClick": [Function],
        "isOpen": false,
        "title": "Title",
        "toggle": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <p>
            Déposez vos fichiers
            .
             
            Ajoutez vos fichiers en les glissant dans cette fenêtre
</p>,
          "className": "dropzone",
          "disableClick": false,
          "disablePreview": false,
          "disabled": false,
          "getDataTransferItems": [Function],
          "inputProps": Object {},
          "maxSize": Infinity,
          "minSize": 0,
          "multiple": true,
          "onDrop": [Function],
          "preventDropOnDocument": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Déposez vos fichiers",
              ".",
              " ",
              "Ajoutez vos fichiers en les glissant dans cette fenêtre",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Déposez vos fichiers",
            ".",
            " ",
            "Ajoutez vos fichiers en les glissant dans cette fenêtre",
          ],
          "type": "p",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing NewFileModal component renders as expected with parameters (as open) 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewFileModal
    handleNoButtonClick={[Function]}
    handleYesButtonClick={[Function]}
    isOpen={true}
    title="Title"
    toggle={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "ModalFooterContent": [Function],
      "children": <n
        className="dropzone"
        disableClick={false}
        disablePreview={false}
        disabled={false}
        getDataTransferItems={[Function]}
        inputProps={Object {}}
        maxSize={Infinity}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
>
        <p>
                Déposez vos fichiers
                .
                 
                Ajoutez vos fichiers en les glissant dans cette fenêtre
        </p>
</n>,
      "className": "NewFileModal",
      "handleNoButtonClick": [Function],
      "handleYesButtonClick": [Function],
      "isOpen": true,
      "title": "Title",
      "toggle": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <p>
          Déposez vos fichiers
          .
           
          Ajoutez vos fichiers en les glissant dans cette fenêtre
</p>,
        "className": "dropzone",
        "disableClick": false,
        "disablePreview": false,
        "disabled": false,
        "getDataTransferItems": [Function],
        "inputProps": Object {},
        "maxSize": Infinity,
        "minSize": 0,
        "multiple": true,
        "onDrop": [Function],
        "preventDropOnDocument": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Déposez vos fichiers",
            ".",
            " ",
            "Ajoutez vos fichiers en les glissant dans cette fenêtre",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Déposez vos fichiers",
          ".",
          " ",
          "Ajoutez vos fichiers en les glissant dans cette fenêtre",
        ],
        "type": "p",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ModalFooterContent": [Function],
        "children": <n
          className="dropzone"
          disableClick={false}
          disablePreview={false}
          disabled={false}
          getDataTransferItems={[Function]}
          inputProps={Object {}}
          maxSize={Infinity}
          minSize={0}
          multiple={true}
          onDrop={[Function]}
          preventDropOnDocument={true}
>
          <p>
                    Déposez vos fichiers
                    .
                     
                    Ajoutez vos fichiers en les glissant dans cette fenêtre
          </p>
</n>,
        "className": "NewFileModal",
        "handleNoButtonClick": [Function],
        "handleYesButtonClick": [Function],
        "isOpen": true,
        "title": "Title",
        "toggle": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <p>
            Déposez vos fichiers
            .
             
            Ajoutez vos fichiers en les glissant dans cette fenêtre
</p>,
          "className": "dropzone",
          "disableClick": false,
          "disablePreview": false,
          "disabled": false,
          "getDataTransferItems": [Function],
          "inputProps": Object {},
          "maxSize": Infinity,
          "minSize": 0,
          "multiple": true,
          "onDrop": [Function],
          "preventDropOnDocument": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Déposez vos fichiers",
              ".",
              " ",
              "Ajoutez vos fichiers en les glissant dans cette fenêtre",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Déposez vos fichiers",
            ".",
            " ",
            "Ajoutez vos fichiers en les glissant dans cette fenêtre",
          ],
          "type": "p",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing NewFileModal component renders as expected without parameters 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewFileModal />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "ModalFooterContent": [Function],
      "children": <n
        className="dropzone"
        disableClick={false}
        disablePreview={false}
        disabled={false}
        getDataTransferItems={[Function]}
        inputProps={Object {}}
        maxSize={Infinity}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
>
        <p>
                Déposez vos fichiers
                .
                 
                Ajoutez vos fichiers en les glissant dans cette fenêtre
        </p>
</n>,
      "className": "NewFileModal",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <p>
          Déposez vos fichiers
          .
           
          Ajoutez vos fichiers en les glissant dans cette fenêtre
</p>,
        "className": "dropzone",
        "disableClick": false,
        "disablePreview": false,
        "disabled": false,
        "getDataTransferItems": [Function],
        "inputProps": Object {},
        "maxSize": Infinity,
        "minSize": 0,
        "multiple": true,
        "onDrop": [Function],
        "preventDropOnDocument": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Déposez vos fichiers",
            ".",
            " ",
            "Ajoutez vos fichiers en les glissant dans cette fenêtre",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Déposez vos fichiers",
          ".",
          " ",
          "Ajoutez vos fichiers en les glissant dans cette fenêtre",
        ],
        "type": "p",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ModalFooterContent": [Function],
        "children": <n
          className="dropzone"
          disableClick={false}
          disablePreview={false}
          disabled={false}
          getDataTransferItems={[Function]}
          inputProps={Object {}}
          maxSize={Infinity}
          minSize={0}
          multiple={true}
          onDrop={[Function]}
          preventDropOnDocument={true}
>
          <p>
                    Déposez vos fichiers
                    .
                     
                    Ajoutez vos fichiers en les glissant dans cette fenêtre
          </p>
</n>,
        "className": "NewFileModal",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <p>
            Déposez vos fichiers
            .
             
            Ajoutez vos fichiers en les glissant dans cette fenêtre
</p>,
          "className": "dropzone",
          "disableClick": false,
          "disablePreview": false,
          "disabled": false,
          "getDataTransferItems": [Function],
          "inputProps": Object {},
          "maxSize": Infinity,
          "minSize": 0,
          "multiple": true,
          "onDrop": [Function],
          "preventDropOnDocument": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Déposez vos fichiers",
              ".",
              " ",
              "Ajoutez vos fichiers en les glissant dans cette fenêtre",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Déposez vos fichiers",
            ".",
            " ",
            "Ajoutez vos fichiers en les glissant dans cette fenêtre",
          ],
          "type": "p",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;
